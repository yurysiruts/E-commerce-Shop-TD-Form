{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/on-start\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/error-message/error-message\";\n\nfunction ReactiveFormsComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r1, \"\");\n  }\n}\n\nexport let ReactiveFormsComponent = /*#__PURE__*/(() => {\n  class ReactiveFormsComponent {\n    constructor(startPage) {\n      this.startPage = startPage;\n      this.countryList = ['Angola', 'USA', 'China', 'Chech', 'Morocco'];\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.contactForm = new FormGroup({\n        firstname: new FormControl(null, [Validators.required]),\n        lastname: new FormControl(null, [Validators.required]),\n        email: new FormControl(null, [Validators.email, Validators.required]),\n        isMarried: new FormControl(),\n        addressData: new FormGroup({\n          address: new FormControl(null, [Validators.required]),\n          postCode: new FormControl(null, [Validators.required])\n        })\n      });\n    }\n\n    onSubmit() {\n      if (this.contactForm.valid) {\n        console.log(this.contactForm.value);\n        this.contactForm.reset();\n        this.submitted = false;\n      } else {\n        this.submitted = true;\n        this.checkInputValidity(this.contactForm);\n      }\n    }\n\n    checkInputValidity(form) {\n      Object.keys(form.controls).forEach(field => {\n        const control = form.get(field);\n\n        if (control instanceof FormControl) {\n          control.markAsTouched({\n            onlySelf: true\n          });\n        } else if (control instanceof FormGroup) {\n          this.checkInputValidity(control);\n        }\n      });\n    }\n\n    isFieldValid(field) {\n      return !this.contactForm.get(field).valid && this.contactForm.get(field).touched;\n    }\n\n    displayErrorMessage(field) {\n      if (this.submitted) {\n        return {\n          'has-error': this.isFieldValid(field),\n          'has-feedback': this.isFieldValid(field)\n        };\n      }\n    }\n\n    displayRedBorder(field) {\n      if (this.submitted) {\n        return {\n          'giveRedBorder': this.isFieldValid(field)\n        };\n      }\n    } // Go on /start page\n\n\n    onStart() {\n      this.startPage.onStart();\n    }\n\n  }\n\n  ReactiveFormsComponent.ɵfac = function ReactiveFormsComponent_Factory(t) {\n    return new (t || ReactiveFormsComponent)(i0.ɵɵdirectiveInject(i1.OnStart));\n  };\n\n  ReactiveFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReactiveFormsComponent,\n    selectors: [[\"app-reactive-forms\"]],\n    decls: 38,\n    vars: 13,\n    consts: [[1, \"box\"], [3, \"formGroup\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"firstname\", 1, \"control-label\", \"required\"], [\"type\", \"text\", \"id\", \"firstname\", \"name\", \"firstname\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"errorMsg\", \"Please provide your firstname!!!\", 3, \"submitted\", \"displayError\"], [\"for\", \"lastname\", 1, \"control-label\", \"required\"], [\"type\", \"text\", \"id\", \"lastname\", \"name\", \"lastname\", \"formControlName\", \"lastname\", 1, \"form-control\"], [\"errorMsg\", \"Please provide your lastname!\", 3, \"submitted\", \"displayError\"], [\"for\", \"email\", 1, \"control-label\", \"required\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"errorMsg\", \"Please enter email you would like to connect with your account!\", 3, \"submitted\", \"displayError\"], [1, \"form-group\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"isMarried\", \"name\", \"isMarried\", \"formControlName\", \"isMarried\", 1, \"form-check-input\"], [\"for\", \"isMarried\", 1, \"form-check-label\"], [\"formGroupName\", \"addressData\"], [1, \"col-xs-6\", \"col-md-6\"], [\"for\", \"country\", 1, \"control-label\", \"required\"], [\"name\", \"country\", \"id\", \"country\", \"formControlName\", \"address\", 1, \"form-control\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"postCode\", 1, \"control-label\", \"required\"], [\"type\", \"text\", \"id\", \"postCode\", \"name\", \"postCode\", \"minlength\", \"5\", \"formControlName\", \"postCode\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"back-btn\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"50\", \"height\", \"50\", \"viewBox\", \"0 0 24 24\", 1, \"back\"], [\"d\", \"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3.222 18.917c5.666-5.905-.629-10.828-5.011-7.706l1.789 1.789h-6v-6l1.832 1.832c7.846-6.07 16.212 4.479 7.39 10.085z\"], [3, \"value\"]],\n    template: function ReactiveFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Firstname:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4)(6, \"app-error-message\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Lastname:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7)(11, \"app-error-message\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"E-mail:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10)(16, \"app-error-message\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 13);\n        i0.ɵɵelement(19, \"input\", 14);\n        i0.ɵɵelementStart(20, \"label\", 15);\n        i0.ɵɵtext(21, \"Married \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 16)(23, \"div\", 12)(24, \"div\", 17)(25, \"label\", 18);\n        i0.ɵɵtext(26, \"Select your Country:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"select\", 19);\n        i0.ɵɵtemplate(28, ReactiveFormsComponent_option_28_Template, 2, 2, \"option\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 17)(30, \"label\", 21);\n        i0.ɵɵtext(31, \"PostCode:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 22);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function ReactiveFormsComponent_Template_button_click_33_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(34, \" Submit \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 24);\n        i0.ɵɵlistener(\"click\", function ReactiveFormsComponent_Template_div_click_35_listener() {\n          return ctx.onStart();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(36, \"svg\", 25);\n        i0.ɵɵelement(37, \"path\", 26);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayErrorMessage(\"firstname\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"submitted\", ctx.submitted)(\"displayError\", ctx.isFieldValid(\"firstname\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayErrorMessage(\"lastname\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"submitted\", ctx.submitted)(\"displayError\", ctx.isFieldValid(\"lastname\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayErrorMessage(\"lastname\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"submitted\", ctx.submitted)(\"displayError\", ctx.isFieldValid(\"email\"));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayRedBorder(\"addressData.address\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countryList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayRedBorder(\"addressData.postCode\"));\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i4.ErrorMessageComponent, i2.CheckboxControlValueAccessor, i2.FormGroupName, i2.SelectControlValueAccessor, i3.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.MinLengthValidator],\n    styles: [\".box[_ngcontent-%COMP%]{margin:10px 50px}label.required[_ngcontent-%COMP%]:after{color:#d00;content:\\\"*\\\";font-size:1.8rem;margin-left:2px}.form-check-label[_ngcontent-%COMP%]{margin-left:3px}select.giveRedBorder[_ngcontent-%COMP%], input.giveRedBorder[_ngcontent-%COMP%]{border:2px solid #a94442}\"]\n  });\n  return ReactiveFormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}