{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../form.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction ComponentBComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 4)(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Nazwa opcji\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 8);\n    i0.ɵɵtext(10, \"Wartosc opcji\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ComponentBComponent_ng_container_4_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onDeleteLesson(i_r2);\n    });\n    i0.ɵɵtext(13, \" delete \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const optionForm_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Opcja \", i_r2 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", optionForm_r1);\n  }\n}\n\nexport let ComponentBComponent = /*#__PURE__*/(() => {\n  class ComponentBComponent {\n    constructor(formBuilder, formService) {\n      this.formBuilder = formBuilder;\n      this.formService = formService; // Actually main form-group with 1 control -> 'options' which is form-array\n\n      this.form = this.formBuilder.group({\n        options: this.formBuilder.array([])\n      });\n    }\n\n    ngOnInit() {\n      this.form.valueChanges.subscribe(val => {\n        this.formService.addNewRadio(val.options);\n      });\n    }\n\n    get options() {\n      return this.form.controls['options'];\n    }\n\n    // optionForm=Control, grouping our inputs into controls & pushing it into form-array\n    onAddLesson() {\n      const optionForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        value: ['', Validators.required]\n      });\n      this.options.push(optionForm);\n    }\n\n    onDeleteLesson(optionIndex) {\n      this.options.removeAt(optionIndex);\n    }\n\n  }\n\n  ComponentBComponent.ɵfac = function ComponentBComponent_Factory(t) {\n    return new (t || ComponentBComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FormService));\n  };\n\n  ComponentBComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ComponentBComponent,\n    selectors: [[\"app-component-b\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"formArrayName\", \"options\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"row\", 3, \"formGroup\"], [1, \"col-xs-6\"], [\"for\", \"optionName\"], [\"formControlName\", \"name\", \"id\", \"optionName\"], [\"for\", \"optionValue\"], [\"formControlName\", \"value\", \"id\", \"optionValue\"], [1, \"delete-btn\", 3, \"click\"]],\n    template: function ComponentBComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"Component B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵelementContainerStart(3, 1);\n        i0.ɵɵtemplate(4, ComponentBComponent_ng_container_4_Template, 14, 2, \"ng-container\", 2);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ComponentBComponent_Template_button_click_5_listener() {\n          return ctx.onAddLesson();\n        });\n        i0.ɵɵelementStart(6, \"button\");\n        i0.ɵɵtext(7, \"Add\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options.controls);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormArrayName, i3.NgForOf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return ComponentBComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}